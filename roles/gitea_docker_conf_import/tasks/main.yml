- name: 'detect gitea configuration file'
  stat:
    path: '{{ gitea_local_conf }}'
  register: gitea_conf_exists

- name: 'Search variable in configfile'
  read_ini:
    path: '{{ gitea_local_conf }}'
    section: '{{ item.section }}'
    option: '{{ item.key }}'
    raise_error: False
  with_items: '{{ config_vars }}'
  changed_when: False
  register: _gitea_extracted_conf
  when: gitea_conf_exists.stat.exists
  check_mode: False
  vars:
    config_vars:
      - section: 'server'
        key: 'LFS_JWT_SECRET'
      - section: 'database'
        key: 'PASSWD'
      - section: 'security'
        key: 'INTERNAL_TOKEN'

- debug:
    var: _gitea_extracted_conf
  when: debug|bool

- name: 'update gitea config'
  set_fact:
    gitea_config: >-
      {%- for conf in _gitea_extracted_conf.results|default([]) -%}
         {%- set section_dict = gitea_config.setdefault(conf.item.section, {}) -%}
         {%- set _ = section_dict.update({conf.item.key: conf.value}) -%}
      {%- endfor -%}
      {{ gitea_config }}

- debug:
    var: gitea_config
  when: debug|bool
